name: Build, Test, and Deploy to AWS EC2

on:
  push:
    branches:
      - deployment

env:
  AWS_REGION: us-east-1
  ECR_REPO: churn-prediction
  IMAGE_TAG: sara0285

jobs:
  build_test_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 
        uses: actions/setup-python@v3
        with:
          python-version: '3.10' 

      - name: Install dependencies
        run: |
          pip install -r apis/requirements.txt

      - name: Run tests
        run: |
          pytest testing/test.py

      - name: Build Docker image
        run: |
          set -x # Enable debug logging
          docker build -t $ECR_REPO:$IMAGE_TAG ./apis
          docker tag $ECR_REPO:$IMAGE_TAG ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Push Docker Image to ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          docker tag $ECR_REPO:$IMAGE_TAG ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPO:$IMAGE_TAG
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPO:$IMAGE_TAG

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Login to AWS ECR
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
            
            # Install git if needed
            which git || sudo yum install -y git

            # Install docker-compose if not present
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              # Create symlink for backwards compatibility
              sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
            fi
            
            # Verify docker-compose installation
            docker-compose --version

            mkdir -p sara_directory
            cd sara_directory

            # Clone or update repo
            if [ -d "MLOps-Course-Labs" ]; then
              cd MLOps-Course-Labs && git pull origin deployment
            else
              git clone https://github.com/SaraElwatany/MLOps-Course-Labs.git
              cd MLOps-Course-Labs
            fi
            
            # Pull latest images and run docker-compose
            docker-compose down || true
            docker-compose pull
            docker-compose up -d
            
            # List running containers
            docker ps
            docker-compose ps

