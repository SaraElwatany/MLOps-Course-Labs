name: CI/CD Pipeline - Deploy API to EC2

on:
  push:
    branches:
      - deployment  

env:
  AWS_REGION: us-east-1
  ECR_REPO: churn-prediction
  IMAGE_TAG: sara123 
  IMAGE_NAME: churn-prediction:sara0285

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      # Run unit tests
      - name: Run Unit Tests
        run: |
          pip install -r apis/requirements.txt
          pytest testing/test.py

      # # Configure AWS credentials
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ env.AWS_REGION }}

      # # Login to ECR
      # - name: Login to Amazon ECR
      #   run: |
      #     aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      # # Build and push Docker image to ECR
      # - name: Build, Tag, and Push Docker Image
      #   run: |
      #     docker build -t $ECR_REPO:$IMAGE_TAG ./apis
      #     docker tag $ECR_REPO:$IMAGE_TAG ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG
      #     docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG

      # # SSH and deploy on EC2
      # - name: Deploy on EC2
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USER }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       sudo rm -rf MLOps-Course-Labs
      #       git clone https://github.com/${{ github.repository }}.git
      #       cd MLOps-Course-Labs
      #       docker-compose down
      #       docker-compose pull
      #       docker-compose up -d --build
